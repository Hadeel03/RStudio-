---
# This here is ymal (yet another markup langauge) (HTML)
title: "Week1_Recap"
author: "Ghadeer Al Jufout"
format: html
---

#Week1 

## RStudio-lec1
* Object assignment operator (MAC shortcut):
  * option + gives â‰ 
  * option - gives <- 
* R is case-sensitive 
  * For example My_apples will cause Error in eval(expr, envir, enclos):                   object'My_apples' not found
* If something comes in quotes, it is not defined in R 
* To get help use ? followed by function or object 
-tidyverse_style_guide
  - After function names do not leave any spaces 
  - Before & after operators leave spaces 
  - Put a space after a comma not before
  - Object names are all lower case, with words separated by an underscore
* If you want to add code inside a quarto document do this
    
```{r}
print("hello woRld!!!")
```

# Getting to know data-lec1
## Data Sample
![](data_sample.png) # The picture is included in week1 folder! 

## Data Matrices
  * Variables <- 8 (state, num_drivers, perc_speeding, perc_not_distracted, perc_no_previous, insurance_premiums, losses). AKA the number of columns!
  * Cases or observations <- 51 (# of states). AKA the number of rows! 
* Some important functions:
  * you can pass a second parameter to choose the # of rows to display
  * head() displays the first few rows
  * tail() displays the last few rows
  * glimpse() displays the # of rows and columns, the type of each column, and the first few values of each column horizontally.
  
## Variables 
  * There are two types of variables 
    * Categorical 
    * Sometimes they are recorded as numbers but not necessarily numeric 
      * Nominal: no ordering, based on magnitude such as disease (0(no),1(yes)) &              Bio.sex 
      * Ordinal: rank or order such as coffee size (s,m,l)
    * Numeric 
      * Discrete: integer only such as # of people in ER
      * Continuous: measured on a continues scale such as age & weight 

# Summarizing Data-lec2
  * Variable summary 
    * Categorical data are summarized with frequency table (Counts or proportions).
    * Numerical data are summarized with the mean or average. 
      * The mean is represented as $\bar{x}$. Summing the observed values and dividing them with the number of observations.
    * Median 
      * List all of the observations from smallest to largest (or vice versa), the median is the observation that is in the middle. 
        * If there are 2 numbers in the middle, the median is the average of those 2 numbers.
    * Q1, Q3, & Interquartile Range
      * To better have this explained, watch this YT video: https://youtu.be/RMOmAn2ShR0?si=hvjlp3zFKzpH5Kjd
      
    * Standard Deviation & Variance 
      * Standard deviation & variance measure the spread of data points.
      * They are used to quantify the amount of variation or dispersion in a set of data values.
      * Here's the formual: 
      $$
      \sigma = \sqrt{\frac{1}{n} \sum_{i=1}^{n} (x_i - \bar{x})^2}
      $$

## Summarizing Data in R
  - Use glimpse("name of the dataset")
  - Use count("name of dataset","name of the col") to summarize categorical data
    - take each data for each row and divide it by the # of observations
  - Use summarize("name of the dataset", mean("name of the col")) to summarize numerical data 
  - Use summarize("name of the dataset", median("name of the col")) when the data is skewd, when there are very high & very low numbers
  - summarize("name of the dataset", quantile("name of the col", 0.75)) for Q3 or summarize("name of the dataset", quantile("name of the col", 0.25)) for Q1 
  - Use summarize("name of the dataset", sd("name of the col") for standard deviation 
  - Use summarize("name of the dataset", var("name of the col") for variance

** NOTE ** 
When data display a skewed distribution we rely on median rather than the mean to understand the center of the distribution.

## Visuals 
  * Bar plots used for (Categorical data)
  * Histograms used for (Numerical data)


## Graphing in R
  - ggplot("dataset name", aes(x = var name)) + geom_histogram() to graph a histogram
  - ggplot("dataset name", aes(x = var name, y= other var name)) + geom_boxplot() for a boxplot
  - ggplot("dataset name", aes(x = var name, y= other var name)) + geom_point() for a scatter plot
  






















